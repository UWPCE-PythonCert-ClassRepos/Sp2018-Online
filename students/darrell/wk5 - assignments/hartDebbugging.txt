The recursive function keeps calling itself and divding n by 2.
Because n is not a factor of 2 the value of n drops below the n == 2 condition
there is no false condition to allow the function to return false and stop.

> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(1)<module>()
-> import sys
(Pdb) ll
  1  ->	import sys
  2
  3  	def my_fun(num):
  4  	    if num == 2:
  5  	        return True
  6
  7  	    return my_fun(num/2)
  8
  9  	if __name__ == '__main__':
 10  	    num = int(sys.argv[1])
 11  	    print(my_fun(num))
 12
 13
(Pdb) n
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(3)<module>()
-> def my_fun(num):
(Pdb) n
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(9)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(10)<module>()
-> num = int(sys.argv[1])
(Pdb) n
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(11)<module>()
-> print(my_fun(num))
(Pdb) s
--Call--
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(3)my_fun()
-> def my_fun(num):
(Pdb) pp num
15
(Pdb) ll
  3  ->	def my_fun(num):
  4  	    if num == 2:
  5  	        return True
  6
  7  	    return my_fun(num/2)
(Pdb) n
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(4)my_fun()
-> if num == 2:
(Pdb) n
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(7)my_fun()
-> return my_fun(num/2)
(Pdb) s
--Call--
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(3)my_fun()
-> def my_fun(num):
(Pdb) ll
  3  ->	def my_fun(num):
  4  	    if num == 2:
  5  	        return True
  6
  7  	    return my_fun(num/2)
(Pdb) pp n
*** NameError: name 'n' is not defined
(Pdb) pp num
7.5
(Pdb) b 4
Breakpoint 1 at /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py:4
(Pdb) ll
  3  ->	def my_fun(num):
  4 B	    if num == 2:
  5  	        return True
  6
  7  	    return my_fun(num/2)
(Pdb) c
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(4)my_fun()
-> if num == 2:
(Pdb) pp num
7.5
(Pdb) c
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(4)my_fun()
-> if num == 2:
(Pdb) pp num
3.75
(Pdb) c
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(4)my_fun()
-> if num == 2:
(Pdb) pp num
1.875
(Pdb) c
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(4)my_fun()
-> if num == 2:
(Pdb) pp num
0.9375
(Pdb) c
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(4)my_fun()
-> if num == 2:
(Pdb) pp num
0.46875
(Pdb) c
> /Users/dahart/git/Sp2018-Online/students/darrell/wk5 - assignments/exercises/recursive.py(4)my_fun()
-> if num == 2:
(Pdb) pp num
0.234375
(Pdb) 